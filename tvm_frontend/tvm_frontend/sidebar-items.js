initSidebarItems({"fn":[["get_last_error","Gets the last error message"],["version","Outputs the current TVM version"]],"macro":[["call_packed","Convenient macro for calling TVM packed functions by providing function identifier and the arguments. This macro outputs a `Result` and let user to perform proper error handling."],["register_global_func","Convenient macro for registering functions from frontend to backend as global TVM packed functions without overriding. If overriding an existing function is needed use the [`function::register`] function instead."]],"mod":[["bytearray","Provides [`TVMByteArray`] which is used for passing the model parameters (stored as byte-array) to a runtime module."],["context","Provides [`TVMContext`] and related device specific informations."],["errors","This module implements TVM custom [`Error`], [`ErrorKind`] and [`Result`] types."],["function","This module provides idiomatic Rust API for creating and working with TVM functions."],["module","Provides [`Module`] type and methods for working with runtime TVM modules."],["ndarray","This module implements [`NDArray`] type for working with TVM tensors or covertsion from Rust's ndarray to TVM `NDArray`."],["ty","This module implements the required conversion from Rust types to TVM types."],["value","This module implements [`TVMArgValue`] and [`TVMRetValue`] types and their conversions to other support TVMValue. `TVMRetValue` is the owned version of `TVMArgValue`."]]});